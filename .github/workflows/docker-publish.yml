name: Build and Publish ZoneMinder Docker Images

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
    inputs:
      zm_version:
        description: 'ZoneMinder version to build'
        required: false
        default: '1.36.35'
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: nardo86/zoneminder

jobs:
  build-packages:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    outputs:
      zm-version: ${{ steps.get-version.outputs.version }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git devscripts equivs jq

      - name: Get ZoneMinder version
        id: get-version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.zm_version }}" >> $GITHUB_OUTPUT
          else
            # Get latest ZoneMinder version from GitHub API (note: repo name is case sensitive!)
            VERSION=$(curl -s https://api.github.com/repos/ZoneMinder/zoneminder/releases/latest | jq -r '.tag_name')
            echo "Fetched version from API: $VERSION"
            if [ "$VERSION" = "null" ] || [ -z "$VERSION" ]; then
              echo "API failed, using fallback version"
              VERSION="1.36.35"
            fi
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Build ZoneMinder packages
        env:
          ZM_VERSION: ${{ steps.get-version.outputs.version }}
          BUILD_ARM64: true
        run: |
          echo "Building ZoneMinder version: $ZM_VERSION"
          # Clone ZoneMinder repository
          git clone https://github.com/ZoneMinder/ZoneMinder.git /tmp/ZoneMinder
          cd /tmp/ZoneMinder
          git checkout $ZM_VERSION
          
          # Build AMD64 package
          echo "Building AMD64 package..."
          OS=debian DIST=bullseye utils/packpack/startpackpack.sh
          cp build/zoneminder_*_amd64.deb $GITHUB_WORKSPACE/
          
          # Clean and build ARM64 package
          echo "Building ARM64 package..."
          rm -rf build/*
          OS=debian DIST=bullseye ARCH=aarch64 utils/packpack/startpackpack.sh
          cp build/zoneminder_*_arm64.deb $GITHUB_WORKSPACE/

      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zoneminder-packages
          path: zoneminder_*.deb
          retention-days: 1

  build-docker:
    needs: build-packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ZoneMinder packages
        uses: actions/download-artifact@v4
        with:
          name: zoneminder-packages
          path: .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=zm-${{ needs.build-packages.outputs.zm-version }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub description
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md

  cleanup:
    needs: build-docker
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: zoneminder-packages